{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "B Language",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#characters"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.b",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "comment.block.b",
              "match": "."
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.b",
          "match": "\\b(auto|extrn|if|else|while|switch|goto|return|case)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.b",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.b",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "characters": {
      "patterns": [
        {
          "name": "string.quoted.single.b",
          "match": "'([^'\\\\]|\\\\.)*'",
          "captures": {
            "0": {
              "name": "constant.character.b"
            }
          }
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.integer.b",
          "match": "-?[0-9]+"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.compound.b",
          "match": "(=\\||=<<|=>>|=-|=\\+|=%|=\\*|=/)"
        },
        {
          "name": "keyword.operator.assignment.b",
          "match": "="
        },
        {
          "name": "keyword.operator.comparison.b",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.bitwise.b",
          "match": "(<<|>>|\\||&)"
        },
        {
          "name": "keyword.operator.arithmetic.b",
          "match": "(\\+\\+|--|\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.logical.b",
          "match": "!"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.section.block.begin.b",
          "match": "\\{"
        },
        {
          "name": "punctuation.section.block.end.b",
          "match": "\\}"
        },
        {
          "name": "punctuation.section.parens.begin.b",
          "match": "\\("
        },
        {
          "name": "punctuation.section.parens.end.b",
          "match": "\\)"
        },
        {
          "name": "punctuation.section.brackets.begin.b",
          "match": "\\["
        },
        {
          "name": "punctuation.section.brackets.end.b",
          "match": "\\]"
        },
        {
          "name": "punctuation.terminator.statement.b",
          "match": ";"
        },
        {
          "name": "punctuation.separator.comma.b",
          "match": ","
        },
        {
          "name": "punctuation.separator.colon.b",
          "match": ":"
        },
        {
          "name": "keyword.operator.ternary.b",
          "match": "\\?"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.b",
          "match": "[a-zA-Z_][a-zA-Z0-9_]{0,31}\\b"
        }
      ]
    }
  },
  "scopeName": "source.b"
}
